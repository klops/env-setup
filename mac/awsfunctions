# helper shell functions

jsonval () {
        json=$1
        prop=$2
        temp=`echo $json | sed 's/\\\\\//\//g' | sed 's/[{}]//g' | awk -v k="text" '{n=split($0,a,","); for (i=1; i<=n; i++) print a[i]}' | sed 's/\"\:\"/\|/g' | sed 's/[\,]/ /g' | sed 's/\"//g' | grep -w $prop | cut -d":" -f2| sed -e 's/^ *//g' -e 's/ *$//g' `
        echo ${temp##*|}
        }

getIAMkey () {
       for user in `aws iam list-users --query "Users[*].UserName" --output=text ` ; do aws iam list-access-keys --user-name $user --output=text; done
}

readMFA () {
        if [ -z "$1" ]; then
	  echo usage: readMFA \$aws-profile 
          return 1
        fi

        # whoami
        export AWS_PROFILE=$1
        export AWS_ACCOUNT_ID=`aws sts get-caller-identity --profile ${AWS_PROFILE} --output=json | jq -r .Account`
        export AWS_USER_ID=`aws iam get-user --profile ${AWS_PROFILE} --output=json | jq -r .User.UserName`
        export AWS_MFA_SERIAL=`aws iam list-mfa-devices --user-name ${AWS_USER_ID} --profile ${AWS_PROFILE} --output=json | jq -r .MFADevices[0].SerialNumber`
	# reset AWS credential in env
	unset AWS_SESSION_TOKEN
	unset AWS_SECURITY_TOKEN

        echo -n "Put in your virtual AWS token for profile ${AWS_PROFILE}: "
	read token

	# update AWS credentials to temp STS values
	aws_temp_creds=$(aws sts get-session-token --serial-number ${AWS_MFA_SERIAL} --output text --profile ${AWS_PROFILE} --token-code $token | cut -f2,4,5)
	aws_temp_array=($aws_temp_creds)
	export AWS_ACCESS_KEY_ID=${aws_temp_array[0]}
	export AWS_SECRET_ACCESS_KEY=${aws_temp_array[1]}
	export AWS_SESSION_TOKEN=${aws_temp_array[2]}
        export AWS_SECURITY_TOKEN=${aws_temp_array[2]}
	
}

